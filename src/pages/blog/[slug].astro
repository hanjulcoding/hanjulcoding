---
import dayjs from 'dayjs';
import MarkdownPostLayout from "@/layouts/MarkdownPostLayout.astro";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { BLOCKS, INLINES } from "@contentful/rich-text-types";
import { client, type BlogPost } from "@/lib/contentful";

const id = Astro.url.searchParams.get('id') || '';
let post : BlogPost;

try {
  post = await client.getSinglePost(id||'');
} catch (error) {
  return Astro.redirect("/404");
}

const options = {
  renderNode: {
    // embedded-entry-block 노드를 처리하는 로직
    [BLOCKS.EMBEDDED_ENTRY]: (node: any) => {
      // 여기서 이미지 관련 필드를 직접 처리
      if (node.data.target.sys.contentType.sys.id === 'componentRichImage') {
        const { url, title } = node.data.target.fields.image.fields.file;
        return `<img src="${url}" alt="${title}" />`;
      }
      return '';
    },
    // 다른 필요한 노드 타입도 정의 가능 (예: 링크)
    [INLINES.HYPERLINK]: (node: any) => {
      const { uri } = node.data;
      return `<a href="${uri}">${node.content[0].value}</a>`;
    },
  },
};

---

<MarkdownPostLayout title={post.title}>
  <time>{dayjs(post.publishedDate).format('YYYY-MM-DD')}</time>
  <h1 class="text-2xl mb-8">{post.title}</h1>
  <article set:html={documentToHtmlString(post.content, options)} />
</MarkdownPostLayout>