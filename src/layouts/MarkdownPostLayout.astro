---
import "@/style/markdown.scss";
import BaseLayout from "./BaseLayout.astro";
const { frontmatter } = Astro.props;
const category = frontmatter?.category || "";
const tags = [...frontmatter.tags?.split(",").map((tag: string) => tag.trim()) || []];
---

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    // Get the slot content container
    const markdownContainer = document.getElementById('markdown');

    if (markdownContainer) {
      // Convert all <p> tags within the container to <br> tags
      markdownContainer.querySelectorAll('p').forEach(p => {
        if(p.innerHTML === '.') {
          p.replaceWith(document.createElement('br'));
        }
      });
    }
  });
</script>

<BaseLayout title={frontmatter.title}>
  <div class="p-8 w-full md:w-3/4 lg:w-1/2 m-auto">
    <p class="text-gray-800 dark:text-gray-200 text-2xl">{frontmatter.title}</p>
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mt-6">
      <p class="stext-gray-800 dark:text-gray-300">{frontmatter.author}</p>
      <p class="mt-2 md:mt-0 text-gray-500 dark:text-gray-400">{frontmatter.displayDate.toString().slice(0, 10)}</p>
    </div>

    <div id="markdown" class={`${category} my-8`}>
      <slot />
    </div>

    <div class="tags">
      {
        tags.map((tag: string) => {
          tag = tag.trim();
          return (
            <p class="tag">
              <a href={`/tags/${tag}`}>{tag}</a>
            </p>
          );
        })
      }
    </div>
  </div>

  <script is:inline
    src="https://utteranc.es/client.js"
    repo="hanjulcoding/hanjulcoding"
    issue-term="title"
    {/* pathname | url | title .. */}
    label="comment"
    theme="preferred-color-scheme"
    crossorigin="anonymous"
    async
  />
</BaseLayout>
